---
kind: ObjectType
version: v1
definition:
  name: Carts
  fields:
    - name: createdAt
      type: Timestamptz
    - name: id
      type: Uuid!
    - name: isComplete
      type: Bool!
    - name: isReminderSent
      type: Bool!
    - name: updatedAt
      type: Timestamptz
    - name: userId
      type: Uuid!
  graphql:
    typeName: Carts
    inputTypeName: CartsInput
  dataConnectorTypeMapping:
    - dataConnectorName: my_connector
      dataConnectorObjectType: carts
      fieldMapping:
        createdAt:
          column:
            name: created_at
        id:
          column:
            name: id
        isComplete:
          column:
            name: is_complete
        isReminderSent:
          column:
            name: is_reminder_sent
        updatedAt:
          column:
            name: updated_at
        userId:
          column:
            name: user_id

---
kind: TypePermissions
version: v1
definition:
  typeName: Carts
  permissions:
    - role: admin
      output:
        allowedFields:
          - createdAt
          - id
          - isComplete
          - isReminderSent
          - updatedAt
          - userId

---
kind: BooleanExpressionType
version: v1
definition:
  name: CartsBoolExp
  operand:
    object:
      type: Carts
      comparableFields:
        - fieldName: createdAt
          booleanExpressionType: TimestamptzBoolExp
        - fieldName: id
          booleanExpressionType: UuidBoolExp
        - fieldName: isComplete
          booleanExpressionType: BoolBoolExp
        - fieldName: isReminderSent
          booleanExpressionType: BoolBoolExp
        - fieldName: updatedAt
          booleanExpressionType: TimestamptzBoolExp
        - fieldName: userId
          booleanExpressionType: UuidBoolExp
      comparableRelationships: []
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: CartsBoolExp

---
kind: AggregateExpression
version: v1
definition:
  name: CartsAggExp
  operand:
    object:
      aggregatedType: Carts
      aggregatableFields:
        - fieldName: createdAt
          aggregateExpression: TimestamptzAggExp
        - fieldName: id
          aggregateExpression: UuidAggExp
        - fieldName: isComplete
          aggregateExpression: BoolAggExp
        - fieldName: isReminderSent
          aggregateExpression: BoolAggExp
        - fieldName: updatedAt
          aggregateExpression: TimestamptzAggExp
        - fieldName: userId
          aggregateExpression: UuidAggExp
  count:
    enable: true
  graphql:
    selectTypeName: CartsAggExp

---
kind: Model
version: v1
definition:
  name: Carts
  objectType: Carts
  source:
    dataConnectorName: my_connector
    collection: carts
  filterExpressionType: CartsBoolExp
  aggregateExpression: CartsAggExp
  orderableFields:
    - fieldName: createdAt
      orderByDirections:
        enableAll: true
    - fieldName: id
      orderByDirections:
        enableAll: true
    - fieldName: isComplete
      orderByDirections:
        enableAll: true
    - fieldName: isReminderSent
      orderByDirections:
        enableAll: true
    - fieldName: updatedAt
      orderByDirections:
        enableAll: true
    - fieldName: userId
      orderByDirections:
        enableAll: true
  graphql:
    selectMany:
      queryRootField: carts
    selectUniques:
      - queryRootField: cartsById
        uniqueIdentifier:
          - id
    orderByExpressionType: CartsOrderBy
    filterInputTypeName: CartsFilterInput
    aggregate:
      queryRootField: cartsAggregate

---
kind: ModelPermissions
version: v1
definition:
  modelName: Carts
  permissions:
    - role: admin
      select:
        filter: null

---
kind: Relationship
version: v1
definition:
  name: cartItems
  source: Carts
  target:
    model:
      name: CartItems
      relationshipType: Array
  mapping:
    - source:
        fieldPath:
          - fieldName: id
      target:
        modelField:
          - fieldName: cartId

---
kind: Relationship
version: v1
definition:
  name: users
  source: Carts
  target:
    model:
      name: Users
      subgraph: users
      relationshipType: Object
  mapping:
    - source:
        fieldPath:
          - fieldName: userId
      target:
        modelField:
          - fieldName: id